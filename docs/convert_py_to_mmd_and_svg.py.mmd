flowchart TD
n0["Func: clean_label"]
n1["Remove ou substitui caracteres especiais para compatibilidade com Mermaid"]
n0 --> n1
n2["label = resub<> label"]
n1 --> n2
n3["label = resubs+ label"]
n2 --> n3
n4["Func: extract_mermaid_from_python_code"]
n5["Gera um fluxograma Mermaid simples a partir de um cÃ³digo Python"]
n4 --> n5
n6["tree = astparsecode_str"]
n5 --> n6
n7["mermaid = graph TD"]
n6 --> n7
n8["node_counter = 0"]
n7 --> n8
n9["Func: new_node"]
n8 --> n9
n10["label = clean_labellabel"]
n9 --> n10
n11["node_id = fNnode_counter"]
n10 --> n11
n12["mermaidappendfnode_idlabel"]
n11 --> n12
n13["Func: walk"]
n9 --> n13
n14{"If: isinstancenode astFunctionDef"}
n13 --> n14
n15["curr = new_nodefFunc: nodename"]
n14 --> n15
n16{"If: parent"}
n14 --> n16
n17["mermaidappendfparent --> curr"]
n16 --> n17
n18{"For: stmt in nodebody"}
n14 --> n18
n19["walkstmt curr"]
n18 --> n19
n20{"If: isinstancenode astIf"}
n14 --> n20
n21["cond = new_nodefIf: astorto_sourcenodeteststrip"]
n20 --> n21
n22{"If: parent"}
n20 --> n22
n23["mermaidappendfparent --> cond"]
n22 --> n23
n24{"For: stmt in nodebody"}
n20 --> n24
n25["walkstmt cond"]
n24 --> n25
n26{"For: stmt in nodeorelse"}
n20 --> n26
n27["walkstmt cond"]
n26 --> n27
n28{"If: isinstancenode astFor"}
n20 --> n28
n29["target = astorto_sourcenodetargetstrip"]
n28 --> n29
n30["it = astorto_sourcenodeiterstrip"]
n28 --> n30
n31["loop = new_nodefFor: target in it"]
n28 --> n31
n32{"If: parent"}
n28 --> n32
n33["mermaidappendfparent --> loop"]
n32 --> n33
n34{"For: stmt in nodebody"}
n28 --> n34
n35["walkstmt loop"]
n34 --> n35
n36{"If: isinstancenode astWhile"}
n28 --> n36
n37["test = astorto_sourcenodeteststrip"]
n36 --> n37
n38["loop = new_nodefWhile: test"]
n36 --> n38
n39{"If: parent"}
n36 --> n39
n40["mermaidappendfparent --> loop"]
n39 --> n40
n41{"For: stmt in nodebody"}
n36 --> n41
n42["walkstmt loop"]
n41 --> n42
n43{"If: isinstancenode astExpr"}
n36 --> n43
n44["label = astorto_sourcenodestrip"]
n43 --> n44
n45["expr = new_nodelabel"]
n43 --> n45
n46{"If: parent"}
n43 --> n46
n47["mermaidappendfparent --> expr"]
n46 --> n47
n48{"If: isinstancenode astAssign"}
n43 --> n48
n49["label = astorto_sourcenodestrip"]
n48 --> n49
n50["assign = new_nodelabel"]
n48 --> n50
n51{"If: parent"}
n48 --> n51
n52["mermaidappendfparent --> assign"]
n51 --> n52
n53{"For: n in treebody"}
n13 --> n53
n54["walkn"]
n53 --> n54
n55["Func: process_all_py_files"]
n56["Busca todos os arquivos py a partir da raiz e gera um mmd e svg para cada um"]
n55 --> n56
n57{"For: dirpath _ filenames in oswalk"}
n56 --> n57
n58{"For: filename in filenames"}
n57 --> n58
n59{"If: filenameendswithpy"}
n58 --> n59
n60["full_path = ospathjoindirpath filename"]
n59 --> n60
n61["base_name = ospathsplitextfilename0"]
n59 --> n61
n62["mmd_path = ospathjoindirpath fbase_namemmd"]
n59 --> n62
n63["svg_path = ospathjoindirpath fbase_namesvg"]
n59 --> n63
n64["printf mmd_path gerado"]
n59 --> n64
n65{"If: __name__ == __main__"}
n66["process_all_py_files"]
n65 --> n66